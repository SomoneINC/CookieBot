from selenium import webdriver
import selenium
import requests
import re
from bs4 import BeautifulSoup
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager
from selenium.common.exceptions import ElementClickInterceptedException
from selenium.common.exceptions import StaleElementReferenceException
from selenium.common.exceptions import NoSuchElementException
from selenium.common.exceptions import WebDriverException
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
import multiprocessing
import time

    
    
    
# Replace 'path_to_driver_executable' with the actual path to your WebDriver executable
chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument("--no-sandbox")
chrome_options.add_argument("--disable-dev-shm-usage")
chrome_options.add_argument("--disable-infobars")
chrome_options.add_argument("--disable-features=VizDisplayCompositor")
chrome_options.add_argument("--disable-gpu")


service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=chrome_options)
NotBot = '/html/body/div[3]/div[2]/div[1]/div[2]/div[2]/button[1]'
Languege = '//*[@id="langSelect-EN"]'
Cookie = '//*[@id="bigCookie"]'
ClickerStore = '/html/body/div[2]/div[2]/div[19]/div[3]/div[6]/div[2]'
GrandmomStore = '/html/body/div[2]/div[2]/div[19]/div[3]/div[6]/div[3]'
FarmStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[4]'
MineStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[5]'
FactoryStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[6]'
BankStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[7]'
TempleStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[8]'
WizardsTowerStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[9]'
ShipmentStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[10]'
AlchamyLabStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[11]'
PortalStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[12]'
TimeMachineStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[13]'
AntyMatterCondencerStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[14]'
PrismStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[15]'
ChanceMakerStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[16]'
FractalEngineStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[17]'
JavascriptConsoleStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[18]'
IdlevarseStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[19]'
CortexBakerStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[20]'
YouStore = '/html/body/div/div[2]/div[19]/div[3]/div[6]/div[21]'
url = "https://orteil.dashnet.org/cookieclicker/"
js = "javascript: (function () {Game.LoadMod('https://cookiemonsterteam.github.io/CookieMonster/dist/CookieMonster.js');})();"

driver.get(url)
html_code = driver.page_source
soup = BeautifulSoup(html_code, 'html.parser')
#StartUp
time.sleep(2)
button = driver.find_element(By.XPATH, NotBot)
button.click()
button = driver.find_element(By.XPATH, Languege)
button.click()
time.sleep(2)
driver.execute_script(js)
time.sleep(2)
#Main
ClickCookie = driver.find_element(By.XPATH, Cookie)
Before = int(round(time.time()))
while True:
    ClickCookie.click()
    """
    Now = int(round(time.time()))
    if (Before + 6 <= Now) :
        Before = Now
    """
    enabled_divs = driver.find_elements(By.CSS_SELECTOR, "div[class*='enabled']")
    upgrades_div = driver.find_element(By.ID, "upgrades")
    upgrade_divs = upgrades_div.find_elements(By.CSS_SELECTOR, "div.enabled")

    for div in upgrade_divs:
        try:
            div.click()
        except NoSuchElementException:
            pass
        except StaleElementReferenceException:
            pass
    for div in enabled_divs:
        try:
        # Find the span with class "price" within the div
            price_span = div.find_element(By.CSS_SELECTOR, "span.price")
        # Get the computed color value of the span
            color_value = price_span.value_of_css_property("color")
            if color_value == 'rgba(0, 255, 0, 1)' :
                div.click()
        except NoSuchElementException:
            pass
        except StaleElementReferenceException:
            pass
        
    


time.sleep(2)           
driver.quit()
